name: Update Releases

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch (adjust as necessary)

jobs:
  update-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get the latest release tag
        id: get_latest_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_release=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          echo "::set-output name=latest_release::$latest_release"

      - name: Get changed files since latest release
        id: get_changes
        run: |
          latest_release=${{ steps.get_latest_release.outputs.latest_release }}
          if git ls-remote --exit-code --tags origin $latest_release; then
            git fetch origin $latest_release --depth=1
            changed_files=$(git diff --name-only $latest_release HEAD)
            echo "::set-output name=changed_files::$changed_files"
          else
            echo "::set-output name=changed_files::"
            echo "Tag $latest_release not found in remote repository"
          fi
          
      - name: Upload changed files to the release
        if: steps.get_changes.outputs.changed_files != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ github.token }}
        run: |
          latest_release=${{ steps.get_latest_release.outputs.latest_release }}
          changed_files=${{ steps.get_changes.outputs.changed_files }}

          for file in $changed_files; do
            if [ -f "$file" ]; then
              gh release upload $latest_release $file --clobber
              echo "Uploaded $file to release $latest_release"
            fi
          done
